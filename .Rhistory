}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="q"){w<-0;return(NULL)}
if(n=="?"){
print("'0'=up a level, number= enter a folder, ,'f'=show files
'd'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
x<-list.dirs(recursive = FALSE); print(x)
n<-fetch()
}
}
navigate()
"q"=="q"
navigate <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="?"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder, ,'f'=show files
'd'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
x<-list.dirs(recursive = FALSE); print(x)
n<-fetch()
}
}
}
navigate()
navigate <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="?"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder, ,'f'=show files
'd'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
if(n!="?"){x<-list.dirs(recursive = FALSE); print(x)}
n<-fetch()
}
}
}
navigate()
navigate <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="?"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder, ,'f'=show files
'd'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
if(n!="?" & n!="d"){x<-list.dirs(recursive = FALSE); print(x)}
n<-fetch()
}
}
}
navigate()
navigate <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="?"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder, ,'f'=show files
'd'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
if(n!="?" & n!="d" & n!="f"){x<-list.dirs(recursive = FALSE); print(x)}
n<-fetch()
}
}
}
navigate("f")
navigate <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="?"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder,'f'=show files,'d'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
if(n!="?" & n!="d" & n!="f"){x<-list.dirs(recursive = FALSE); print(x)}
n<-fetch()
}
}
}
navigate()
navigate <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="q"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder,'f'=show files,'d'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
if(n!="?" & n!="d" & n!="f"){x<-list.dirs(recursive = FALSE); print(x)}
n<-fetch()
}
}
}
navigate("?")
navigate("q")
navigate()
rm(list=ls())
## this R function provides an easier way to move through the
## folder structure in when using R
## by Adam Reiner (fee and open for any use)
nav <- function(n=NULL) {
fetch <- function(k=NULL) {
k <- readline(prompt="Enter Navigate Command or ? for help: ")
if(k=="?"|k=="d"|k=="f"|k=="q"){k
} else {k<-as.numeric(k)
}
}
w<-1
while (w == 1) {
z <- getwd()
if(is.null(n)){n<-fetch()}
if(n=="?"){
print("'0'=up a level, number= enter a folder,'f'=show files,'d'=show directory, 'q'=quit" )
} else {
if(n=="f"){y <- list.files(recursive = FALSE);print(c(y))}
if(n=="d"){x <- list.dirs(recursive = FALSE);print(c(x))}
if(is.numeric(n)){
if(n==0){setwd("..");u<-getwd(); print(paste("Moving Up to ",u))
} else {x<-list.dirs(recursive = FALSE);setwd(x[n]);u<-getwd();
print(paste("Moving Down to ",u))}
u<-z
}
}
if(n=="q"){w<-0} else {
if(n!="?" & n!="d" & n!="f"){x<-list.dirs(recursive = FALSE); print(x)}
n<-fetch()
}
}
}
nav()
edit
edit()
?unzip
?unzip()
unzip("activity.zip")
list.files(recursive = FALSE)
?read.csv
?read.csv
activity <- read.csv("activity.csv", header = TRUE)
head(activity)
table(is.na(activity$steps))
table(activity$steps))
table(activity$steps)
table(activity$date)
24*60/5
?as.Date.character
as.Date(activity$date)
as.Date(activity$date[1])
as.Date(activity$date[1]) -1
table(activity$date)
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
sum(is.na(activity))
act0 <- c(activity$steps,as.date(activity$date), activity$interval)
act <- activity[is.na(act0)]
act0 <- c(activity$steps,as.Date(activity$date), activity$interval)
act <- activity[is.na(act0)]
is.na(act0)
sum(is.na(act0))
head(act0)
dim(acto)
dim(act0)
activity <- c(activity$steps,as.Date(activity$date), activity$interval)
head(activity)
activity <- read.csv("activity.csv", header = TRUE)
activity$date <- as.Date(activity$date)
head(activity)
act <- activity[is.na(activity)]
head(act)
act <- activity[,is.na(activity)]
act <- activity[is.na(activity),]
head(act)
act <- activity[!is.na(activity)]
head(act)
act <- activity[!is.na(activity),]
head(act)
summary(act)
?aggregate
aggregate(act, date, sum())
aggregate(act, date, sum
)
aggregate(act$steps, act$date, sum)
aggregate(act, act$date, sum)
aggregate(act, as.list(act$$date), sum)
aggregate(act, as.list(act$date), sum)
dim(act)
aggregate(act$steps, as.list(act$date), sum)
dim(act$steps)
dim(act$date)
dim(act$interval)
!is.na(activity)
is.na(activity$steps)
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
activity <- read.csv("activity.csv", header = TRUE)
sum(is.na(activity$date))
act <- activity[!is.na(activity$steps),]
dim(act)
dim(activity)
aggregate(act$steps, as.list(act$date), sum)
dim( as.list(act$date))
!is.na(as.list(act$date))
sum(!is.na(as.list(act$date)))
sum(!is.na(act$steps))
aggregate(act$steps, act$date, sum)
?aggregate
aggregate(act, act$date, sum)
aggregate(act, list(Date = act$date), sum)
typeof(act$steps)
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red", "blue", 1, 2, NA, "big", 1, 2, "red", 1, NA, 12)
by2 <- c("wet", "dry", 99, 95, NA, "damp", 95, 99, "red", 99, NA, NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
aggregate(act$steps, list(Date = act$date), sum)
daysum <- aggregate(act$steps, list(Date = act$date), sum)
daysummean <- mean(daysum)
head(daysum)
daysum <- aggregate(act$steps, list(Date = act$date), sum=sumsteps)
daysum <- aggregate(sumsteps = act$steps, list(Date = act$date), sum=sumsteps)
daysum <- aggregate(act$steps, list(Date = act$date), sum=sumsteps)
daysum <- aggregate(act$steps, list(Date = act$date), sumsteps=sum)
daysum <- aggregate(act$steps, list(Date = act$date), sumsteps=fun='sum')
daysum <- aggregate(act$steps, list(Date = act$date), sumsteps=FUN="sum")
daysum <- aggregate(act$steps, list(Date = act$date), sum)
daysum
daysummean <- mean(daysum$x)
daysummean
hist(daysum)
daysummean <- mean(daysum$x)
daysummed <- median(daysum$x)
hist(daysum$x)
daysummean <- mean(daysum$x)
daysummed <- median(daysum$x)
```{r}
daysum <- aggregate(act$steps, list(Date = act$date), sum=sumsteps)
daysum <- aggregate(act$steps, list(Date = act$date), sum)
hist(daysum$x)
daysummean <- mean(daysum$x)
daysummed <- median(daysum$x)
?hist
daysum <- aggregate(act$steps, list(Date = act$date), sum)
daysummean <- mean(daysum$x)
daysummed <- median(daysum$x)
daysummean
daysumed
daysummed
intervalmean <- aggregate(act$steps, list(Interval = act$int), mean)
plot(intervalmean$x)
plot(intervalmean$x)
?plot
plot(intervalmean$x, intervalmean$Interval)
plot(intervalmean$Interval, intervalmean$x)
head(intervalmean)
plot(intervalmean$Interval/60, intervalmean$x)
max(intervalmean$Interval)
max(intervalmean$Interval, 15)
head(intervalmean, 15)
7%%3
7%/%3
9%/%3
9%%3
30%%3
30%/%3
as.character(paste(act$interval %% 100, ":", act$interval %/% 100))
55%%100
55%/%100
?paste
act$interval <- as.character(paste0(act$interval %/% 100, ":", act$interval %% 100))
as.character(paste0(act$interval %/% 100, ":", act$interval %% 100))
act <- activity[!is.na(activity$steps),]
as.character(paste0(act$interval %/% 100, ":", act$interval %% 100))
?as.Date
length("djdj")
nchar("djdj")
nchar(0)
nchar(03)
act$interval <- paste0(
if(nchar(as.char(act$interval %/% 100))==1){
paste0("0",act$interval %/% 100)
} else {act$interval %/% 100}
,
":"
,
if(nchar(act$interval %% 100) ==1){
paste0("0",act$interval%%100)
} else {act$interval %% 100}
)
act$interval <- paste0(
if(nchar(as.character(act$interval %/% 100))==1){
paste0("0",act$interval %/% 100)
} else {act$interval %/% 100}
,
":"
,
if(nchar(as.character(act$interval %% 100) ==1){
paste0("0",act$interval%%100)
} else {act$interval %% 100}
)
as.character(55%%100)
as.character(55%/%100)
nchar(as.character(55%/%100))
nchar(as.character(55%%100))
paste0("0",act$interval %/% 100)
if(nchar(as.character(act$interval %% 100) ==1){
paste0("0",act$interval%% 100)
} else {act$interval %% 100}
if(nchar(as.character(act$interval %% 100) ==1)){
paste0("0",act$interval%% 100)
} else {act$interval %% 100}
)
head(act$interval)
act$interval[1:20]
105 %/% 100
act$interval[1:40]
205 %/% 100
tail(act$interval)
2355 %/% 100
5 %/% 100
act$interval <- paste0(
if(nchar(as.character(act$interval %/% 100))<=9){
paste0("0",act$interval %/% 100)
} else {act$interval %/% 100}
,
":"
,
if(nchar(as.character(act$interval %% 100) <=9)){
paste0("0",act$interval%% 100)
} else {act$interval %% 100}
)
head(act$interval
)
act <- activity[!is.na(activity$steps),]
act$date <- as.Date(act$date)
as.POSIXlt(115)
?as.POSIXct
act$inthrs <- if(nchar(as.character(act$interval %/% 100))<=9){
paste0("0",act$interval %/% 100)
} else {act$interval %/% 100}
act$intmin <- if(nchar(as.character(act$interval %% 100) <= 9)){
paste0("0",act$interval%% 100)
} else {act$interval %% 100}
act$int <- paste0(act$inthrs,":",act$intmin)
act$int
dim(act)
dim(act[1])
for(i=1:dim(act[1])
for(i in 1:dim(act[1])
{
for(i in 1:dim(act[1]){
for(i in 1:dim(act)[1]{
dim(act)[1]
for(i in 1:dim(act)[1] {print(i)}
for(i in 1:dim(act)[1]) {print(i)}
for(i in 1:dim(act)[1]) {
act$inthrs[i] <- if(nchar(as.character(act$interval[i] %/% 100))<=9){
paste0("0",act$interval[i] %/% 100)
} else {act$interval[i] %/% 100}
act$intmin[i] <- if(nchar(as.character(act$interval[i] %% 100) <= 9)){
paste0("0",act$interval[i] %% 100)
} else {act$interval[i] %% 100}
}
act$int <- paste0(act$inthrs,":",act$intmin)
head(act)
for(i in 1:dim(act)[1]) {
act$inthrs[i] <- if(nchar(as.character(act$interval[i] %/% 100))<=9){
paste0("0",act$interval[i] %/% 100)
} else {act$interval[i] %/% 100}
act$intmin[i] <- if(nchar(as.character(act$interval[i] %% 100)) <= 9){
paste0("0",act$interval[i] %% 100)
} else {act$interval[i] %% 100}
}
act$int <- paste0(act$inthrs,":",act$intmin)
head(act)
20%%100
for(i in 1:dim(act)[1]) {
act$inthrs[i] <- if(nchar(as.character(act$interval[i] %/% 100))<=1){
paste0("0",act$interval[i] %/% 100)
} else {act$interval[i] %/% 100}
act$intmin[i] <- if(nchar(as.character(act$interval[i] %% 100))<=1){
paste0("0",act$interval[i] %% 100)
} else {act$interval[i] %% 100}
}
act$int <- paste0(act$inthrs,":",act$intmin)
head(act)
sum(nchar(act$int>5))
act$int[1:50]
act$int[1:500]
sum(nchar(act$int>4))
sum(nchar(act$int>6))
sum(nchar(act$int)>6)
sum(nchar(act$int)>5)
sum(nchar(act$int)>4)
head(daysum)
